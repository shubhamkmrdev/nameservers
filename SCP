#!/bin/bash

# Script for SCP file transfer in the background with password prompt
# Uses sshpass for non-interactive password handling

# Define log files
LOG_FILE="scp_transfer.log"

# Prompt user for source and destination
read -p "Enter the source file (e.g., user@source_server:/path/to/file): " SOURCE
read -p "Enter the destination path (e.g., user@dest_server:/remote/path/): " DESTINATION

# Prompt for password
read -s -p "Enter the password for the remote server: " PASSWORD
echo

# Perform SCP with sshpass in the background
echo "Starting SCP transfer in the background..."
nohup sshpass -p "$PASSWORD" scp -vr "$SOURCE" "$DESTINATION" > "$LOG_FILE" 2>&1 &

# Get the background process ID
SCP_PID=$!
echo "SCP transfer started with PID: $SCP_PID"
echo "Logs (including progress): $LOG_FILE"

# Notify the user
echo "You can monitor progress in $LOG_FILE."
echo "Run 'tail -f $LOG_FILE' to view the logs/errors in real-time."
